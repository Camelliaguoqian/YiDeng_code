HTTP协议那些事
1、客户端 服务器

2、HTTP协议
1）目前应用版本是HTTP1.1
2)HTTP默认端口号为80
3)HTTPS默认端口号为443

3、工作过程：
一次HTTP操作可称为一个事务，
1）首先客户机与服务器建立连接，只要单击某个超链接，HTTP工作开始。
2）建立连接后，客户机发送一个请求给服务器，请求方式的格式为：统一资源标识符（URI）、协议版本号，后边是MIME信息包括请求修饰符、客户机信息和可能的内容。
3）服务器接到请求后，给予相应的响应服务，戚格式为一个状态行，包括信息的协议版本号、一个成功或者错误的代码，后边是MIME信息包括服务器信息、实体信息和可能的内容。
4）客户端接收服务器所返回的信息通过浏览器显示在用户的显示屏上，然后客户机与服务器断开连接。


4、请求与响应
1）HTTP请求组成：请求行、消息报头、请求正文  
2）HTTP响应组成：状态行、消息报头、请求正文

请求行：以一个方法符号开头，后面跟着请求的URI和协议版本号
状态行：服务器HTTP协议的版本,服务器发回的响应状态代码和状态代码的文本描述。

状态码：3位数字，第一位定义了响应的类别
1xx:指示信息--表示请求已接收，继续处理
2xx:成功--表示请求已被成功接收、理解、接受
3xx:重定向--要完成的请求必须进行更进一步的操作
4xx:客户端错误--请求有语法错误或者请求无法实现
5xx:服务器端错误--服务器未能实现合法的请求



5、cookies与session
1)cookies是保存在客户端的小段文本，随客户端点每一个请求发送该url下的所有cookies到服务器端。
2)session则保存在服务器端，通过唯一的值sessionID来区别每一个用户。sessionID随每个连接请求发送到服务器，服务器根据sessionID来识别客户端，再通过session的key获取session值。


6、缓存机制
【转】【http://www.cnblogs.com/chenqf/p/6386163.html】
HTTP缓存有多种规则，根据是否需要重新向服务器发起请求来分类，我将其分为两大类(强制缓存，对比缓存)
强制缓存如果生效，不需要再和服务器发生交互，而对比缓存不管是否生效，都需要与服务端发生交互。
两类缓存规则可以同时存在，强制缓存优先级高于对比缓存，也就是说，当执行强制缓存的规则时，如果缓存生效，直接使用缓存，不再执行对比缓存规则。

强制缓存

从上文我们得知，强制缓存，在缓存数据未失效的情况下，可以直接使用缓存数据，那么浏览器是如何判断缓存数据是否失效呢？
我们知道，在没有缓存数据的时候，浏览器向服务器请求数据时，服务器会将数据和缓存规则一并返回，缓存规则信息包含在响应header中。

对于强制缓存来说，响应header中会有两个字段来标明失效规则（Expires/Cache-Control）
使用chrome的开发者工具，可以很明显的看到对于强制缓存生效时，网络请求的情况

Expires
　　Expires的值为服务端返回的到期时间，即下一次请求时，请求时间小于服务端返回的到期时间，直接使用缓存数据。
不过Expires 是HTTP 1.0的东西，现在默认浏览器均默认使用HTTP 1.1，所以它的作用基本忽略。
另一个问题是，到期时间是由服务端生成的，但是客户端时间可能跟服务端时间有误差，这就会导致缓存命中的误差。
所以HTTP 1.1 的版本，使用Cache-Control替代。

Cache-Control
Cache-Control 是最重要的规则。常见的取值有private、public、no-cache、max-age，no-store，默认为private。
private:             客户端可以缓存
public:              客户端和代理服务器都可缓存（前端的同学，可以认为public和private是一样的）
max-age=xxx:   缓存的内容将在 xxx 秒后失效
no-cache:          需要使用对比缓存来验证缓存数据（后面介绍）
no-store:           所有内容都不会缓存，强制缓存，对比缓存都不会触发（对于前端开发来说，缓存越多越好，so...基本上和它说886）

对比缓存
对比缓存，顾名思义，需要进行比较判断是否可以使用缓存。
浏览器第一次请求数据时，服务器会将缓存标识与数据一起返回给客户端，客户端将二者备份至缓存数据库中。
再次请求数据时，客户端将备份的缓存标识发送给服务器，服务器根据缓存标识进行判断，判断成功后，返回304状态码，通知客户端比较成功，可以使用缓存数据
总结
对于强制缓存，服务器通知浏览器一个缓存时间，在缓存时间内，下次请求，直接用缓存，不在时间内，执行比较缓存策略。
对于比较缓存，将缓存信息中的Etag和Last-Modified通过请求发送给服务器，由服务器校验，返回304状态码时，浏览器直接使用缓存。



6、 HTTP的链路安全
1）加密重要数据
2）对重要数据签名
3）使用安全连接HTTPS

7、下一代HTTP2 协议
1)使用二进制格式传输，更高效、更紧凑
2)对报头压缩，降低开销
3)多路复用，一个网络连接实现并行请求
4)服务器主动推送，减少请求的延迟


8、反向代理
nginx





